<style>
/* RTL Support */
.customer-accounts-container {
    direction: rtl;
    text-align: right;
}

/* Enhanced Customer Accounts Styling */
.table-responsive {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
}

.table td, .table th {
    white-space: nowrap;
    vertical-align: middle;
}

.stat-card {
    background: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    text-align: center;
    position: relative;
    overflow: hidden;
}

.stat-card::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    height: 4px;
    background: linear-gradient(270deg, #ffd700, #ffb300);
}

.stat-number {
    font-size: 1.2rem;
    font-weight: bold;
    color: #2c3e50;
    margin-bottom: 5px;
    word-break: break-word;
    line-height: 1.2;
    min-height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 5px;
}

.stat-label {
    color: #7f8c8d;
    font-size: 0.9rem;
    margin-bottom: 10px;
}

.stat-icon {
    font-size: 2rem;
    position: absolute;
    top: 15px;
    left: 15px;
    opacity: 0.3;
}

.badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
}

.card {
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 20px;
}

.card-header {
    background: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    font-weight: 600;
}

/* Responsive improvements */
@media (max-width: 768px) {
    .stats-grid {
        grid-template-columns: 1fr 1fr !important;
    }
    
    .stat-number {
        font-size: 1.4rem;
    }
    
    .table {
        font-size: 0.85rem;
    }
    
    .btn-sm {
        padding: 0.2rem 0.4rem;
        font-size: 0.75rem;
    }
}

@media (max-width: 480px) {
    .stats-grid {
        grid-template-columns: 1fr !important;
    }
}

/* Fix for number display */
.number-display {
    font-family: 'Courier New', monospace;
    direction: ltr;
    text-align: left;
}
</style>

<div class="customer-accounts-container">
    <div class="page-header">
        <h1 class="page-title">حساب تفصیلی مشتریان</h1>
        <p>وضعیت مالی و حساب هر مشتری</p>
    </div>

<!-- Summary Cards -->
<div class="stats-grid" style="grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));">
    <% 
        let totalCustomers = customers.length;
        let customersWithBalance = customers.filter(c => c.current_balance > 0).length;
        let totalDebt = customers.reduce((sum, c) => sum + parseFloat(c.current_balance || 0), 0);
        let totalPurchases = customers.reduce((sum, c) => sum + parseFloat(c.total_purchases || 0), 0);
    %>
    
    <div class="stat-card">
        <div class="stat-number"><%= formatNumber(totalCustomers) %></div>
        <div class="stat-label">کل مشتریان</div>
        <div class="stat-icon" style="color: #17a2b8;">👥</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-number"><%= formatNumber(customersWithBalance) %></div>
        <div class="stat-label">مشتریان بدهکار</div>
        <div class="stat-icon" style="color: #ffc107;">⚠️</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-number"><%= formatNumber(totalDebt) %></div>
        <div class="stat-label">کل مانده مشتریان (ریال)</div>
        <div class="stat-icon" style="color: #dc3545;">💳</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-number"><%= formatNumber(totalPurchases) %></div>
        <div class="stat-label">کل خرید مشتریان (ریال)</div>
        <div class="stat-icon" style="color: #28a745;">💰</div>
    </div>
</div>

<!-- Customer Accounts Table -->
<div class="card">
    <div class="card-header">
        لیست حساب مشتریان
        <div class="float-left">
            <input type="text" id="searchCustomer" placeholder="جستجو در مشتریان..." class="form-control form-control-sm" style="width: 200px; display: inline-block;">
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover" id="customersTable">
                <thead style="background: #f8f9fa;">
                    <tr>
                        <th style="min-width: 80px;">کد مشتری</th>
                        <th style="min-width: 150px;">نام مشتری</th>
                        <th style="min-width: 100px;">تلفن</th>
                        <th style="min-width: 120px; text-align: left;">کل خرید (ریال)</th>
                        <th style="min-width: 120px; text-align: left;">کل پرداخت (ریال)</th>
                        <th style="min-width: 120px; text-align: left;">مانده حساب (ریال)</th>
                        <th style="min-width: 80px;">وضعیت</th>
                        <th style="min-width: 100px;">عملیات</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (customers.length === 0) { %>
                        <tr>
                            <td colspan="8" class="text-center" style="padding: 40px; color: #666;">
                                هیچ مشتری‌ای یافت نشد
                            </td>
                        </tr>
                    <% } else { %>
                        <% customers.forEach(customer => { %>
                            <tr>
                                <td>
                                    <code><%= customer.customer_code %></code>
                                </td>
                                <td>
                                    <strong><%= customer.full_name %></strong>
                                    <% if (customer.national_id) { %>
                                        <br>
                                        <small class="text-muted">کد ملی: <%= customer.national_id %></small>
                                    <% } %>
                                </td>
                                <td>
                                    <%= customer.phone || '-' %>
                                </td>
                                <td class="number-display">
                                    <%= formatNumber(customer.total_purchases || 0) %>
                                </td>
                                <td class="number-display">
                                    <%= formatNumber(customer.total_payments || 0) %>
                                </td>
                                <td class="number-display" style="font-weight: bold;">
                                    <% const balance = parseFloat(customer.current_balance || 0); %>
                                    <span style="color: <%= balance > 0 ? '#dc3545' : (balance < 0 ? '#28a745' : '#6c757d') %>;">
                                        <%= formatNumber(Math.abs(balance)) %>
                                        <% if (balance > 0) { %>
                                            <br><small>(بدهکار)</small>
                                        <% } else if (balance < 0) { %>
                                            <br><small>(بستانکار)</small>
                                        <% } %>
                                    </span>
                                </td>
                                <td>
                                    <% if (balance > 0) { %>
                                        <span class="badge badge-warning">بدهکار</span>
                                    <% } else if (balance < 0) { %>
                                        <span class="badge badge-success">بستانکار</span>
                                    <% } else { %>
                                        <span class="badge badge-secondary">تسویه</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div style="display: flex; gap: 5px;">
                                        <a href="/accounting/customer/<%= customer.id %>" class="btn btn-sm btn-primary" title="مشاهده جزئیات">
                                            👁️
                                        </a>
                                        <% if (balance > 0) { %>
                                            <button class="btn btn-sm btn-success" onclick="showPaymentModal(<%= customer.id %>, '<%= customer.full_name %>', <%= balance %>)" title="ثبت پرداخت">
                                                💰
                                            </button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="POST" action="/accounting/add-payment">
                <div class="modal-header">
                    <h5 class="modal-title">ثبت پرداخت</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="customer_id" id="paymentCustomerId">
                    
                    <div class="form-group">
                        <label>نام مشتری:</label>
                        <input type="text" id="paymentCustomerName" class="form-control" readonly>
                    </div>
                    
                    <div class="form-group">
                        <label>مانده فعلی:</label>
                        <input type="text" id="paymentCurrentBalance" class="form-control" readonly>
                    </div>
                    
                    <div class="form-group">
                        <label>مبلغ پرداخت (ریال): *</label>
                        <input type="text" name="amount" id="paymentAmount" class="form-control" required placeholder="مبلغ را وارد کنید (فارسی یا انگلیسی)">
                        <small class="form-text text-muted">می‌توانید اعداد فارسی یا انگلیسی وارد کنید</small>
                    </div>
                    
                    <div class="form-group">
                        <label>روش پرداخت: *</label>
                        <select name="payment_method" class="form-control" required>
                            <option value="">انتخاب کنید</option>
                            <option value="cash">نقد</option>
                            <option value="card">کارت</option>
                            <option value="transfer">حواله</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label>تاریخ پرداخت: *</label>
                        <input type="date" name="payment_date" class="form-control" required>
                    </div>
                    
                    <div class="form-group">
                        <label>توضیحات:</label>
                        <textarea name="description" class="form-control" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">انصراف</button>
                    <button type="submit" class="btn btn-success">ثبت پرداخت</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="card">
    <div class="card-header">
        عملیات
    </div>
    <div class="card-body">
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
            <a href="/accounting" class="btn btn-secondary">بازگشت به حسابداری</a>
            <a href="/accounting/general-ledger" class="btn btn-info">دفتر کل</a>
            <a href="/accounting/reports" class="btn btn-success">گزارشات مالی</a>
            <button onclick="window.print()" class="btn btn-outline-primary">چاپ</button>
        </div>
    </div>
</div>

<script>
// Customer search functionality
document.getElementById('searchCustomer').addEventListener('keyup', function() {
    const searchValue = this.value.toLowerCase();
    const table = document.getElementById('customersTable');
    const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
    
    for (let row of rows) {
        const customerName = row.cells[1].textContent.toLowerCase();
        const customerCode = row.cells[0].textContent.toLowerCase();
        const phone = row.cells[2].textContent.toLowerCase();
        
        if (customerName.includes(searchValue) || customerCode.includes(searchValue) || phone.includes(searchValue)) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    }
});

// Payment modal
function showPaymentModal(customerId, customerName, currentBalance) {
    document.getElementById('paymentCustomerId').value = customerId;
    document.getElementById('paymentCustomerName').value = customerName;
    document.getElementById('paymentCurrentBalance').value = new Intl.NumberFormat('fa-IR').format(currentBalance) + ' ریال';
    
    // Set today's date
    const today = new Date().toISOString().split('T')[0];
    document.querySelector('input[name="payment_date"]').value = today;
    
    $('#paymentModal').modal('show');
}

// Function to convert Persian numbers to English
function persianToEnglish(str) {
    const persianNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];
    const englishNumbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
    
    let result = str.toString();
    for (let i = 0; i < persianNumbers.length; i++) {
        result = result.replace(new RegExp(persianNumbers[i], 'g'), englishNumbers[i]);
    }
    return result;
}

// Handle form submission with Persian number conversion
document.addEventListener('DOMContentLoaded', function() {
    const paymentForm = document.querySelector('#paymentModal form');
    if (paymentForm) {
        paymentForm.addEventListener('submit', function(e) {
            const amountInput = document.getElementById('paymentAmount');
            if (amountInput) {
                // Convert Persian numbers to English before submission
                const originalValue = amountInput.value;
                const englishValue = persianToEnglish(originalValue.replace(/,/g, ''));
                
                if (isNaN(englishValue) || Number(englishValue) <= 0) {
                    e.preventDefault();
                    alert('لطفاً مبلغ معتبری وارد کنید');
                    return false;
                }
                
                amountInput.value = englishValue;
            }
        });
    }
});

// Initialize Bootstrap components if available
$(document).ready(function() {
    if (typeof $.fn.modal !== 'undefined') {
        // Bootstrap is available
    }
});
</script>
</div> 