<div class="page-header">
    <div style="display: flex; justify-content: space-between; align-items: center;">
        <div>
            <h1 class="page-title">فروش و صدور فاکتور</h1>
            <p>مشاهده و مدیریت فاکتورهای فروش</p>
        </div>
        <div>
            <a href="/sales/new" class="btn btn-success">
                فاکتور جدید
            </a>
        </div>
    </div>
</div>

<!-- Search and Filters -->
<div class="search-filters">
    <div class="filters-row">
        <div class="form-group">
            <label class="form-label">شماره فاکتور</label>
            <input type="text" id="invoiceSearch" class="form-control" placeholder="شماره فاکتور را وارد کنید...">
        </div>
        <div class="form-group">
            <label class="form-label">نام مشتری</label>
            <input type="text" id="customerSearch" class="form-control" placeholder="نام مشتری را وارد کنید...">
        </div>
        <div class="form-group">
            <label class="form-label">از تاریخ (شمسی)</label>
            <input type="text" id="fromDate" class="form-control" placeholder="1403/01/01">
        </div>
        <div class="form-group">
            <label class="form-label">تا تاریخ (شمسی)</label>
            <input type="text" id="toDate" class="form-control" placeholder="1403/12/29">
        </div>
        <div class="form-group">
            <button type="button" class="btn btn-secondary" onclick="clearFilters()">
                پاک کردن فیلترها
            </button>
        </div>
    </div>
</div>

<!-- Sales Summary -->
<div class="stats-grid" style="grid-template-columns: repeat(3, 1fr); margin-bottom: 20px;">
    <div class="stat-card">
        <div class="stat-number">
            <% 
            let totalSales = 0;
            if (invoices && invoices.length > 0) {
                for (let i = 0; i < invoices.length; i++) {
                    totalSales += parseFloat(invoices[i].grand_total || 0);
                }
            }
            %>
            <%= formatNumber(totalSales) %>
        </div>
        <div class="stat-label">مجموع فروش (ریال)</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-number"><%= invoices ? invoices.length : 0 %></div>
        <div class="stat-label">تعداد فاکتورها</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-number">
            <%= invoices && invoices.length > 0 ? formatNumber(Math.round(totalSales / invoices.length)) : 0 %>
        </div>
        <div class="stat-label">میانگین فروش (ریال)</div>
    </div>
</div>

<!-- Invoices Table -->
<div class="table-container">
    <table class="table" id="invoicesTable">
        <thead>
            <tr>
                <th>شماره فاکتور</th>
                <th>دسته‌بندی کالاها</th>
                <th>نام مشتری</th>
                <th>تاریخ فاکتور</th>
                <th>نرخ طلا</th>
                <th>مبلغ کل</th>
                <th>وضعیت</th>
                <th>عملیات</th>
            </tr>
        </thead>
        <tbody>
            <% if (invoices && invoices.length > 0) { %>
                <% invoices.forEach(function(invoice) { %>
                    <tr>
                        <td><strong><%= invoice.invoice_number %></strong></td>
                        <td>
                            <% if (invoice.categories) { %>
                                <small style="color: #666; line-height: 1.4;">
                                    <%= invoice.categories %>
                                </small>
                            <% } else { %>
                                <small style="color: #999;">بدون دسته‌بندی</small>
                            <% } %>
                        </td>
                        <td><%= invoice.customer_name %></td>
                        <td>
                            <% if (invoice.invoice_date_shamsi) { %>
                                <%= invoice.invoice_date_shamsi %>
                            <% } else { %>
                                <span class="shamsi-date" data-gregorian="<%= invoice.invoice_date %>">
                                    <%= moment(invoice.invoice_date).format('YYYY/MM/DD') %>
                                </span>
                            <% } %>
                        </td>
                        <td><%= formatNumber(invoice.gold_rate) %> ریال</td>
                        <td><strong><%= formatNumber(invoice.grand_total) %> ریال</strong></td>
                        <td>
                            <% if (invoice.status === 'active') { %>
                                <span class="status-badge status-active">فعال</span>
                            <% } else if (invoice.status === 'cancelled') { %>
                                <span class="status-badge status-cancelled">لغو شده</span>
                            <% } else { %>
                                <span class="status-badge status-returned">برگشت داده شده</span>
                            <% } %>
                        </td>
                        <td>
                            <div class="actions-dropdown">
                                <button class="btn-actions" onclick="toggleDropdown('<%= invoice.id %>', event)">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </button>
                                <div class="dropdown-menu" id="<%= 'dropdown-' + invoice.id %>">
                                    <a href="<%= '/sales/view/' + invoice.id %>" class="dropdown-item">
                                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M1 12S5 4 12 4s11 8 11 8-4 8-11 8S1 12 1 12z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                        مشاهده
                                    </a>
                                    <% if (invoice.status === 'active') { %>
                                        <a href="<%= '/sales/edit/' + invoice.id %>" class="dropdown-item">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M12 20h9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            ویرایش
                                        </a>
                                    <% } %>
                                    <a href="<%= '/sales/print/' + invoice.id %>" target="_blank" class="dropdown-item">
                                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <polyline points="6,9 6,2 18,2 18,9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <rect x="6" y="14" width="12" height="8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                        چاپ
                                    </a>
                                    <a href="<%= '/sales/pdf/' + invoice.id %>" class="dropdown-item">
                                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <line x1="16" y1="13" x2="8" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <line x1="16" y1="17" x2="8" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <polyline points="10,9 9,9 8,9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                        دانلود PDF
                                    </a>
                                    <% if (invoice.status === 'active') { %>
                                        <div class="dropdown-divider"></div>
                                        <button onclick="cancelInvoice('<%= invoice.id %>')" class="dropdown-item text-warning">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
                                                <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" stroke-width="2"/>
                                                <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" stroke-width="2"/>
                                            </svg>
                                            لغو فاکتور
                                        </button>
                                    <% } %>
                                    <% if (user.role === 'admin') { %>
                                        <button onclick="deleteInvoice('<%= invoice.id %>')" class="dropdown-item text-danger">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <polyline points="3,6 5,6 21,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="M8 6v-2a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2m3 0v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6h14z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="10" y1="11" x2="10" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="14" y1="11" x2="14" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            حذف فاکتور
                                        </button>
                                    <% } %>
                                </div>
                            </div>
                        </td>
                    </tr>
                <% }) %>
            <% } else { %>
                <tr>
                    <td colspan="8" style="text-align: center; padding: 40px; color: #666;">
                        هیچ فاکتوری ثبت نشده است
                    </td>
                </tr>
            <% } %>
        </tbody>
    </table>
</div>

<style>
/* Status badges */
.status-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 500;
    display: inline-block;
}

.status-active {
    background-color: #d4edda;
    color: #155724;
}

.status-cancelled {
    background-color: #f8d7da;
    color: #721c24;
}

.status-returned {
    background-color: #e2e3e5;
    color: #383d41;
}

/* Action dropdown styles */
.actions-dropdown {
    position: relative;
    display: inline-block;
}

.btn-actions {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    color: #6c757d;
}

.btn-actions:hover {
    background: #e9ecef;
    color: #495057;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.25);
    min-width: 200px;
    max-width: 250px;
    z-index: 9999;
    display: none;
    padding: 8px 0;
}

/* Auto-adjust dropdown position if near bottom of viewport */
.dropdown-menu.dropdown-up {
    top: auto;
    bottom: 100%;
}

.dropdown-menu.show {
    display: block;
}

.dropdown-item {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    text-decoration: none;
    color: #495057;
    font-size: 14px;
    transition: background-color 0.2s ease;
    border: none;
    background: none;
    width: 100%;
    text-align: right;
    cursor: pointer;
}

.dropdown-item:hover {
    background-color: #f8f9fa;
    color: #495057;
    text-decoration: none;
}

.dropdown-item.text-warning {
    color: #856404;
}

.dropdown-item.text-warning:hover {
    background-color: #fff3cd;
    color: #856404;
}

.dropdown-item.text-danger {
    color: #721c24;
}

.dropdown-item.text-danger:hover {
    background-color: #f8d7da;
    color: #721c24;
}

.dropdown-divider {
    height: 1px;
    background-color: #dee2e6;
    margin: 4px 0;
}

.dropdown-item svg {
    flex-shrink: 0;
}

/* Table container fix for dropdown */
.table-container {
    overflow: visible;
}

/* Ensure table doesn't clip dropdowns */
table {
    overflow: visible;
}

tbody {
    overflow: visible;
}

tr {
    overflow: visible;
}

/* Responsive improvements */
@media (max-width: 768px) {
    .table-container {
        overflow-x: auto;
        overflow-y: visible;
    }
    
    .actions-dropdown {
        position: static;
    }
    
    .dropdown-menu {
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        right: auto;
    }
}
</style>

<script>
// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Search functionality
    const invoiceSearch = document.getElementById('invoiceSearch');
    const customerSearch = document.getElementById('customerSearch');
    const fromDate = document.getElementById('fromDate');
    const toDate = document.getElementById('toDate');
    
    if (invoiceSearch) invoiceSearch.addEventListener('input', filterTable);
    if (customerSearch) customerSearch.addEventListener('input', filterTable);
    if (fromDate) fromDate.addEventListener('change', filterTable);
    if (toDate) toDate.addEventListener('change', filterTable);
    
    console.log('Sales page JavaScript loaded successfully');
    
    // Convert Gregorian dates to Persian for old records
    convertGregorianToPersian();
});

// Function to convert Gregorian dates to Persian
function convertGregorianToPersian() {
    const shamsiElements = document.querySelectorAll('.shamsi-date');
    
    shamsiElements.forEach(function(element) {
        const gregorianDate = element.getAttribute('data-gregorian');
        if (gregorianDate && typeof moment !== 'undefined') {
            try {
                // Use moment-jalaali to convert to Persian date
                const persianDate = moment(gregorianDate).format('jYYYY/jMM/jDD');
                element.textContent = persianDate;
                element.style.color = '#007bff'; // Blue color to indicate converted date
                element.title = 'تاریخ تبدیل شده از میلادی: ' + gregorianDate;
            } catch (error) {
                console.error('Error converting date:', error);
                // Fallback to simple conversion
                const date = new Date(gregorianDate);
                const persianDate = convertToSimplePersian(date);
                if (persianDate) {
                    element.textContent = persianDate;
                    element.style.color = '#28a745'; // Green color for simple conversion
                }
            }
        }
    });
}

// Simple Persian date conversion fallback
function convertToSimplePersian(date) {
    try {
        // Simple approximation - not accurate but better than Gregorian
        const year = date.getFullYear() - 621;
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}/${month}/${day}`;
    } catch (error) {
        return null;
    }
}

function filterTable() {
    const invoiceSearch = document.getElementById('invoiceSearch').value.toLowerCase();
    const customerSearch = document.getElementById('customerSearch').value.toLowerCase();
    const fromDate = document.getElementById('fromDate').value;
    const toDate = document.getElementById('toDate').value;
    
    const table = document.getElementById('invoicesTable');
    const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
    
    for (let i = 0; i < rows.length; i++) {
        const row = rows[i];
        if (rows[i].cells.length === 1) continue;
        
        const invoiceNumber = row.cells[0].textContent.toLowerCase();
        const categories = row.cells[1].textContent.toLowerCase();
        const customerName = row.cells[2].textContent.toLowerCase();
        const invoiceDate = row.cells[3].textContent;
        
        let showRow = true;
        
        if (invoiceSearch && !invoiceNumber.includes(invoiceSearch)) {
            showRow = false;
        }
        
        if (customerSearch && !customerName.includes(customerSearch) && !categories.includes(customerSearch)) {
            showRow = false;
        }
        
        if (fromDate || toDate) {
            const dateStr = invoiceDate.replace(/\//g, '-');
            const invoiceDateObj = new Date(dateStr);
            
            if (fromDate && invoiceDateObj < new Date(fromDate)) {
                showRow = false;
            }
            
            if (toDate && invoiceDateObj > new Date(toDate)) {
                showRow = false;
            }
        }
        
        row.style.display = showRow ? '' : 'none';
    }
}

function clearFilters() {
    document.getElementById('invoiceSearch').value = '';
    document.getElementById('customerSearch').value = '';
    document.getElementById('fromDate').value = '';
    document.getElementById('toDate').value = '';
    filterTable();
}

// Dropdown functionality
function toggleDropdown(invoiceId, event) {
    // Prevent event bubbling
    if (event) {
        event.stopPropagation();
        event.preventDefault();
    }
    
    console.log('toggleDropdown called for invoice:', invoiceId);
    
    // Close all other dropdowns first
    const allDropdowns = document.querySelectorAll('.dropdown-menu');
    allDropdowns.forEach(function(dropdown) {
        if (dropdown.id !== `dropdown-${invoiceId}`) {
            dropdown.classList.remove('show');
            dropdown.classList.remove('dropdown-up');
        }
    });
    
    // Toggle the clicked dropdown
    const dropdown = document.getElementById(`dropdown-${invoiceId}`);
    if (dropdown) {
        dropdown.classList.toggle('show');
        
        // Check if dropdown should open upward
        if (dropdown.classList.contains('show')) {
            const rect = dropdown.getBoundingClientRect();
            const viewportHeight = window.innerHeight;
            
            // If dropdown would go below viewport, open it upward
            if (rect.bottom > viewportHeight - 20) {
                dropdown.classList.add('dropdown-up');
            } else {
                dropdown.classList.remove('dropdown-up');
            }
        }
        
        console.log('Dropdown toggled, current classes:', dropdown.className);
    } else {
        console.error('Dropdown not found for invoice:', invoiceId);
    }
}

// Close dropdowns when clicking outside
document.addEventListener('click', function(event) {
    if (!event.target.closest('.actions-dropdown')) {
        const allDropdowns = document.querySelectorAll('.dropdown-menu');
        allDropdowns.forEach(function(dropdown) {
            dropdown.classList.remove('show');
        });
    }
});

// Cancel Invoice Function
function cancelInvoice(invoiceId) {
    if (confirm('آیا از لغو این فاکتور مطمئن هستید؟ این عمل قابل برگشت نیست.')) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/sales/cancel/${invoiceId}`;
        form.style.display = 'none';
        
        // Add CSRF token if needed
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = '_method';
        csrfInput.value = 'PUT';
        form.appendChild(csrfInput);
        
        document.body.appendChild(form);
        form.submit();
    }
}

// Delete Invoice Function (Admin only)
function deleteInvoice(invoiceId) {
    if (confirm('آیا از حذف این فاکتور مطمئن هستید؟ این عمل کاملاً غیرقابل برگشت است.')) {
        if (confirm('هشدار: حذف فاکتور تمام اطلاعات مربوط به آن را از بین می‌برد. آیا مطمئن هستید؟')) {
            // Use fetch API for DELETE request
            fetch(`/sales/delete/${invoiceId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => {
                if (response.ok) {
                    // Reload the page to show updated list
                    window.location.reload();
                } else {
                    return response.text().then(text => {
                        throw new Error(text || 'خطا در حذف فاکتور');
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('خطا در حذف فاکتور: ' + error.message);
            });
        }
    }
}
</script> 